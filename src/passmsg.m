function [score,Ix,Iy,Imc,Imp] = passmsg(child, parent, cbid, pbid)
assert(numel(cbid) == 1 && numel(pbid) == 1);
Ny  = size(parent.score,1);
Nx  = size(parent.score,2);

MC = numel(child.gauid{cbid});
MP = numel(parent.gauid{pbid});

[score0,Ix0,Iy0] = deal(zeros(Ny,Nx,MC,MP));
[asl_score0,asl_Ix0,asl_Iy0] = deal(zeros(Ny,Nx,MC,MP));
NNX = int32(Nx);
NNY= int32(Ny);

for mc = 1:MC
    unary_Score =  double(child.score + (child.pdw(cbid)*child.defMap{cbid}(:,:,mc)));
    ch_gauw = child.gauw{cbid}(mc,:);
    ch_mean  =  [child.mean_x{cbid}(mc), child.mean_y{cbid}(mc)];
    ch_var = [child.var_x{cbid}(mc), child.var_y{cbid}(mc)];
    for mp = 1:MP
        %     if child.pid == 1
        %         disp('residim')
        %     end
        [score0(:,:,mc,mp), Ix0(:,:,mc,mp),Iy0(:,:,mc,mp)] = ...
            distance_transform(unary_Score, ...
            ch_gauw, parent.gauw{pbid}(mp,:), ...
            ch_mean, ...
            ch_var, ...
            [parent.mean_x{pbid}(mp), parent.mean_y{pbid}(mp)], ...
            [parent.var_x{pbid}(mp), parent.var_y{pbid}(mp)], ...
            NNX,NNY);
        
        %     [score0(:,:,mc,mp), Ix0(:,:,mc,mp), Iy0(:,:,mc,mp)] = ...
        %       my_distance_trans( double(child.score + (child.pdw(cbid)*child.defMap{cbid}(:,:,mc))), ...
        %       child.gauw{cbid}(mc,:), parent.gauw{pbid}(mp,:), ...
        %       [child.mean_x{cbid}(mc), child.mean_y{cbid}(mc)], ...
        %       [child.var_x{cbid}(mc), child.var_y{cbid}(mc)], ...
        %       [parent.mean_x{pbid}(mp), parent.mean_y{pbid}(mp)], ...
        %       [parent.var_x{pbid}(mp), parent.var_y{pbid}(mp)], ...
        %       int32(Nx), int32(Ny) );
        %   tic
        %   [m_score0(:,:,mc,mp), m_Ix0(:,:,mc,mp), m_Iy0(:,:,mc,mp)] = ...
        %       marjan_transform( double(child.score + (child.pdw(cbid)*child.defMap{cbid}(:,:,mc))), ...
        %       child.gauw{cbid}(mc,:), parent.gauw{pbid}(mp,:), ...
        %       [child.mean_x{cbid}(mc), child.mean_y{cbid}(mc)], ...
        %       [child.var_x{cbid}(mc), child.var_y{cbid}(mc)], ...
        %       [parent.mean_x{pbid}(mp), parent.mean_y{pbid}(mp)], ...
        %       [parent.var_x{pbid}(mp), parent.var_y{pbid}(mp)], ...
        %       int32(Nx), int32(Ny) );
        %     time = toc
        score0(:,:,mc,mp) = score0(:,:,mc,mp) + parent.pdw(pbid)*parent.defMap{pbid}(:,:,mp);
    end
end
score = reshape(score0, size(score0, 1),size(score0, 2), MC*MP);
[score, Imcp] = max(score, [], 3);
[Imc, Imp] = ind2sub([MC,MP], Imcp);
[Ix, Iy] = deal(zeros(Ny,Nx));
for i = 1:Ny
    for j = 1:Nx
        Ix(i,j) = Ix0(i,j,Imc(i,j),Imp(i,j));
        Iy(i,j) = Iy0(i,j,Imc(i,j),Imp(i,j));
    end
end
